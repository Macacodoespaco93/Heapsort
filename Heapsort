heapsort(A)
    build_max_heap(A)
    for i = A.length downto 2
        swap A[1] with A[i]
        heap_size = heap_size - 1
        max_heapify(A, 1)

build_max_heap(A)
    heap_size = A.length
    for i = A.length/2 downto 1
        max_heapify(A, i)

max_heapify(A, i)
    l = left(i)
    r = right(i)
    if l <= heap_size and A[l] > A[i]
        largest = l
    else
        largest = i
    if r <= heap_size and A[r] > A[largest]
        largest = r
    if largest != i
        swap A[i] with A[largest]
        max_heapify(A, largest)
